from solver import Solver, _
import z3

# https://www.youtube.com/watch?v=h6ZBe7mVXe4

given = (
    (_, _, _, _, _, _, _, _, _),
    (_, _, _, _, _, _, _, _, _),
    (_, _, 7, _, _, _, _, _, _),
    (_, _, _, _, _, _, _, _, _),
    (_, _, _, _, _, _, _, _, _),
    (_, _, _, 7, _, _, _, _, _),
    (_, _, _, _, _, _, _, _, _),
    (_, _, _, _, _, _, _, _, _),
    (_, _, _, _, 7, _, _, _, _),
)

LINES = [
    [(0, 1), (1, 0)],
    [(0, 2), (1, 1), (2, 0)],
    [(0, 3), (1, 2), (2, 1), (3, 0)],
    [(0, 5), (1, 4), (2, 3), (3, 2), (4, 1), (5, 0)],
    [(0, 6), (1, 5), (2, 4), (3, 3), (4, 2), (5, 1), (6, 0)],
    [(0, 7), (1, 6), (2, 5), (3, 4), (4, 3), (5, 2), (6, 1), (7, 0)],
    [(1, 8), (2, 7), (3, 6), (4, 5), (5, 4), (6, 3), (7, 2), (8, 1)],
    [(2, 8), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2)],
    [(3, 8), (4, 7), (5, 6), (6, 5), (7, 4), (8, 3)],
    [(5, 8), (6, 7), (7, 6), (8, 5)],
    [(6, 8), (7, 7), (8, 6)],
    [(7, 8), (8, 7)],
]


def sums(s, vars):
    for line in LINES:
        for (c0, r0), (c1, r1) in zip(line, line[1:]):
            v0 = vars[r0][c0]
            v1 = vars[r1][c1]

            s.add(z3.Or([v0 + v1 == sum for sum in [7, 9]]))


s = (
    Solver(given)
    .extra_constraint(sums)
)
solution = s.solve()

Solver.pretty_print(solution)
